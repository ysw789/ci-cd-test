name: Build and Push Docker Image - dev

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Fetch secrets from AWS Secrets Manager
        run: |
          aws secretsmanager get-secret-value --secret-id ${{ secrets.AWS_SECRET_NAME }} --query 'SecretString' --output text | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > .env

      #      - name: Set up properties file
      #        run: echo "${{ secrets.DEV_PROPERTIES }}" > src/main/resources/application-dev.properties

      - name: Upload .env file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: env-file
          path: .env

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get current time
        run: echo "CURRENT_TIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.dev
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ci-cd-test-dev:${{ env.CURRENT_TIME }},
            ${{ secrets.DOCKER_USERNAME }}/ci-cd-test-dev:latest
          platforms: linux/amd64,linux/arm64

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download .env file
        uses: actions/download-artifact@v2
        with:
          name: env-file
          path: .

      - name: SSH to Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ~/cicdtest
            docker pull ${{ secrets.DOCKER_USERNAME }}/ci-cd-test-dev:latest
            docker stop ci-cd-test-dev
            docker rm ci-cd-test-dev
            docker run -d -p 9090:9090 --name ci-cd-test-dev --env-file ./.env ${{ secrets.DOCKER_USERNAME }}/ci-cd-test-dev:latest
            exit